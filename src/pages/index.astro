---
import { SEO } from "astro-seo";
import { getCollection, getEntry } from "astro:content";
import { Picture } from "astro:assets";
import { musicEventSchema } from "../util/jsonLd";
import Icon from "../components/Icon.astro";
import Layout from "../layouts/Base.astro";
import Container from "../components/Container.astro";
import Grid from "../components/Grid.astro";
import GridItem from "../components/GridItem.astro";
import HomepageBand from "../components/HomepageBand.astro";

import darkCastleFest2024Poster from "../images/dark-castle-fest-2024-lineup.jpg";

const { currentYear, domain, siteName, social } = Astro.locals;

const allEvents = await getCollection("events");
const nextEvent = allEvents.find(({ data }) => data.year === currentYear);

const nextEventBands = nextEvent?.data.bands || [];
const nextEventDjs = nextEvent?.data.djs || [];
const nextEventPerformances = nextEvent?.data.performances || [];

/*
const location = nextEvent
   ? await getEntry("locations", nextEvent.data.location.slug)
   : null;
*/

let bands = [];
let djs = [];
let performances = [];

for (const { slug } of nextEventBands) {
   const band = await getEntry("performers", slug);

   if (band) {
      bands.push(band);
   }
}

for (const { slug } of nextEventDjs) {
   const dj = await getEntry("performers", slug);

   if (dj) {
      djs.push(dj);
   }
}

for (const { slug } of nextEventPerformances) {
   const performance = await getEntry("performers", slug);

   if (performance) {
      performances.push(performance);
   }
}

const lastestActs: any[] = [
   await getEntry("performers", "attrition"),
   await getEntry("performers", "maciste-in-hell"),
   // await getEntry("performers", "attrition"),
   await getEntry("vendors", "the-gingerbread-hag"),
   await getEntry("sponsors", "the-hive"),
   await getEntry("sponsors", "third-house-communications"),
   await getEntry("sponsors", "pale-moon-tattoo"),
   await getEntry("sponsors", "aurora-gallery-and-boutique"),
   await getEntry("performers", "ichabod-2024"),
   await getEntry("performers", "mollys-midnight-villains"),
   await getEntry("performers", "frenchy-and-the-punk"),
   await getEntry("performers", "of-limestone-chlorophyl-and-bone"),
   await getEntry("performers", "iris-marlowe"),
   await getEntry("performers", "clubdrugs"),
   await getEntry("performers", "sinister-senile-2024"),
   await getEntry("performers", "dead-souls-gothic-lounge-2024"),
   await getEntry("performers", "the-kentucky-vampires-2024"),
   await getEntry("performers", "count-grozny-2024"),
   await getEntry("performers", "blood-dance"),
   await getEntry("performers", "dj-creepy-crawly"),
   await getEntry("performers", "tokyo-teens"),
   await getEntry("performers", "astari-nite-2024"),
   await getEntry("performers", "the-dead-speak"),
   await getEntry("performers", "saddle-of-southern-darkness"),
   await getEntry("performers", "motuvius-rex-2024"),
   await getEntry("performers", "silver-rein"),
   await getEntry("performers", "the-neuro-farm-2024"),
   await getEntry("performers", "bat-noise"),
   await getEntry("performers", "sombre-arcane"),
   await getEntry("performers", "ghost-painted-sky"),
   await getEntry("performers", "attic-eyes"),
];

const jsonSchema = nextEvent ? await musicEventSchema(nextEvent.slug) : {};
---

<Layout>
   <SEO
      slot="seo"
      title="Dark Castle Fest 2024 - Louisville, KY"
      description="Radio Arcane presents Dark Castle Fest. A Gothic Music & Dark Arts Festival featuring performances by Astari Nite, The Kentucky Vampires, and more."
      openGraph={{
         basic: {
            title: "Dark Castle Fest 2024 - Louisville, KY",
            image: `${domain}/images/dark-castle-fest-2024-lineup.jpg`,
            type: "website",
            url: domain,
         },
         optional: {
            locale: "en_US",
            siteName,
         },
      }}
   />

   <Container boxGap={true} tag="article" classes="pb-lg">
      <h1 class="title">{nextEvent?.data?.title}</h1>

      <Grid tag="section" center={true} collapse={true}>
         <GridItem xs={12} md={6} lg={7}>
            <h2 class="mb-0">
               <a
                  class="text-default"
                  href="https://www.radio-arcane.com"
                  target="_blank">Radio Arcane</a
               > presents Dark Castle Fest<br />
               A Gothic Music & Dark Arts Festival
            </h2>

            <p class="text-secondary">
               <time datetime="2024-09-26">September 26</time> â€“ <time
                  datetime="2024-09-28">28th</time
               >, 2024<br />
               Louisville, Kentucky
            </p>

            <p>
               Please follow us on <a
                  href={social?.facebook}
                  target="_blank"
                  rel="noopener">Facebook</a
               > and <a href={social?.instagram} target="_blank" rel="noopener"
                  >Instagram</a
               > for the latest updates.
            </p>

            {
               nextEvent?.data?.ticketsUrl && (
                  <a
                     class="btn btn--primary"
                     href={nextEvent?.data.ticketsUrl}
                     target="_blank"
                     rel="noopener"
                  >
                     <Icon icon="ticket" classes="ml-0" />
                     <span class="inline-block">Purchase Tickets</span>
                  </a>
               )
            }
         </GridItem>
         <GridItem xs={12} md={6} lg={5}>
            <figure>
               <Picture
                  src={darkCastleFest2024Poster}
                  formats={["webp", "avif"]}
                  alt=`Dark Castle Festival ${currentYear} Poster`
                  fallbackFormat="jpg"
                  loading="eager"
                  width={900}
               />
            </figure>
         </GridItem>
      </Grid>
   </Container>

   <Container boxGap={true}>
      <h3 class="title uppercase">{currentYear} Announcements!</h3>

      {
         lastestActs.map((performer, i) => (
            <HomepageBand
               performer={performer}
               flow={i % 2 ? `right` : `left`}
            />
         ))
      }
   </Container>
</Layout>

<script
   slot="jsonLd"
   type="application/ld+json"
   set:html={JSON.stringify(jsonSchema)}
/>
